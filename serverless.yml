service: coffee
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: ${env:stage}
  region: ap-east-1
  iam:
    role: coffeeBasicLambdaRole
  environment:
    stage: ${env:stage}

plugins:
  - serverless-offline

package:
  individually: true
  patterns:
    - '!src/**'
    - '!node_modules/**'
    - '!local-dynamodb/**'
    - '!.gitignore'
    - '!.dockerignore'
    - '!.env'
    - '!Dockerfile'
    - '!README.md'
    - '!*.js'
    - '!*.json'
    - '!terraform/**'
    - '!zip/**'

functions:
  PutCoffee:
    handler: src/api/putCoffee.handler
    memorySize: 128
    package:
      patterns:
        - src/api/putCoffee.js
    events:
      - http:
          path: /api/putCoffee
          method: post
          authorizer:
            name: PutCoffeeAuthorizer
            identitySource: method.request.header.origin
            type: request
          request:
            schema:
              application/json:
                name: true
                price: true
                origin: true
    layers:
      - { Ref: NodeModulesLambdaLayer }
  PutCoffeeAuthorizer:
    handler: src/authorizers/putCoffee.handler
    layers:
      - { Ref: NodeModulesLambdaLayer }
    package:
      patterns:
        - src/authorizers/putCoffee.js
  GetCoffeeByOrigin:
    handler: src/api/getCoffeeByOrigin.handler
    memorySize: 128
    package:
      patterns:
        - src/api/getCoffeeByOrigin.js
    events:
      - http:
          path: /api/getCoffeeByOrigin
          method: post
          request:
            parameters:
              querystrings:
                origin: true
layers:
  NodeModules:
    path: layer
    name: ${self:service}-${sls:stage}-node-modules-layer

resources:
  Resources:
    coffeeBasicLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-lambda-role-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - 'lambda.amazonaws.com'
              Action:
                - 'sts:AssumeRole'
        ManagedPolicyArns:
          - arn:aws:iam::${env:accountId}:policy/coffee-permissionboundary/coffee-s3-init-policy
          - arn:aws:iam::${env:accountId}:policy/coffee-permissionboundary/coffee-dynamodb-init-policy
          - arn:aws:iam::${env:accountId}:policy/coffee-permissionboundary/coffee-apigateway-init-policy
          - arn:aws:iam::${env:accountId}:policy/coffee-permissionboundary/coffee-lambda-init-policy
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
