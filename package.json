{
    "name": "aws-apigw-lambda-dynamodb-restv2-sls-tf",
    "version": "1.0.0",
    "main": "index.js",
    "scripts": {
        "dev": "node offline.js",
        "sls-deploy:dev": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "sls-deploy:staging": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "sls-deploy:prod": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "tf-plan:dev": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "tf-plan:staging": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "tf-plan:prod": "npm run lint && npm install && npm run prune && node copy.js && npm install && node deploy.js",
        "tf-apply:dev": "npm run lint && node deploy.js",
        "tf-apply:staging": "npm run lint && node deploy.js",
        "tf-apply:prod": "npm run lint && node deploy.js",
        "create-layer-module": "node createLayerModule.js",
        "remove-layer-module": "node removeLayerModule.js",
        "lint": "eslint --fix \"**/*.js\"",
        "test": "jest --no-cache",
        "prune": "npm prune --production",
        "prepare": "husky install",
        "create-table-local": "node createTable.js",
        "list-tables-local": "aws dynamodb list-tables --endpoint http://localhost:8000",
        "scan-table-local:coffee_info": "aws dynamodb scan --table-name COFFEE_INFO --endpoint http://localhost:8000",
        "prettier": "prettier --write ."
    },
    "jest": {
        "verbose": true,
        "collectCoverage": true,
        "globalSetup": "./test/global-setup.js",
        "globalTeardown": "./test/global-teardown.js",
        "testTimeout": 20000
    },
    "keywords": [],
    "author": "johnnyhohohohohoho@gmail.com",
    "license": "ISC",
    "description": "This is an example of demostrating how to create restful api using AWS API Gateway v2, AWS Lambda and DynamoDB. Deploy apis using Terraform or Serverless Framework.",
    "devDependencies": {
        "@commitlint/cli": "^15.0.0",
        "@commitlint/config-conventional": "^15.0.0",
        "dynamodb-local": "0.0.31",
        "eslint": "^8.3.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prettier": "^4.0.0",
        "husky": "^7.0.0",
        "jest": "^27.3.1",
        "lint-staged": "^12.1.2",
        "prettier": "^2.4.1",
        "serverless-offline": "^8.3.0"
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged",
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
    },
    "lint-staged": {
        "**/*.js": [
            "npm run lint",
            "jest --findRelatedTests --verbose"
        ],
        "*.+(json|yml)": [
            "prettier --write ."
        ]
    },
    "dependencies": {
        "aws-sdk": "^2.1035.0",
        "coffee-service": "file:src/layer/service/coffee-service",
        "coffee-util": "file:src/layer/util/coffee-util",
        "ncp": "^2.0.0"
    }
}
